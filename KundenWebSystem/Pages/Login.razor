@page "/Login"
@using System.Text.RegularExpressions
@using KundenWebSystem.Database.Model
@inject KWSContext Context
@inject SignInService SiService

<h3>Anmeldebereich</h3>
<h4>Für Bestandskunden</h4>
<label for="InputEmail">Email</label>
<input id="InputEmail" class="form-control-sm" type="email" @bind-value="email" />
<br />
<label style="color:darkred" hidden="@hiddenEmail">@emailError</label>
<br />
<label for="InputPassword">Passwort</label>
<input id="InputPassword" class="form-control-sm" type="password" @bind-value="password" />
<br />
<label style="color:darkred" hidden="@hiddenPassword">@wrongPassword</label>
<br />
<button type="submit" class="btn btn-primary" @onclick="CheckLoginDetails">Einloggen</button>
<br />
<p>Noch kein Kundenkonto?</p>
<a href="/">Jetzt registrieren</a> <!--ToDO: add register page path-->
<p>&copy; 2023 - FunEvents GmbH</p>

@code
{
    const string invalidEmail = "Eingabe entspricht keiner gültigen Emailadresse";
    const string unknownEmail = "Diese Emailadresse ist nicht registriert";
    const string wrongPassword = "Email und Passwort stimmen nicht überein";

    Regex emailValidation = new Regex(@"[a-zA-Z0-9]+@[a-zA-Z0-9]+\.[a-z]{2,4}");

    string email;
    string password;

    string emailError;
    bool hiddenEmail = true;
    bool hiddenPassword = true;

    async void CheckLoginDetails()
    {
        //Check if a possible Email was input
        if (!CheckEmailInput())
        {
            emailError = invalidEmail;
            hiddenEmail = false;

            return;
        }

        //Check if the Email exists
        if (!CheckEmail())
        {
            emailError = unknownEmail;
            hiddenEmail = false;
            return;
        }

        //Check if the password is correct
        if (!await SiService.TryLogIn(password, email))
        {
            hiddenPassword = false;
            hiddenEmail = true;

            return;
        }

        hiddenPassword = true;
        hiddenEmail = true;
        //TODO: redirect to dashboard
    }

    bool CheckEmailInput() => emailValidation.IsMatch(email);

    bool CheckEmail() => Context.tbl_Kunden.Any(k => k.kd_EMail == email);
}