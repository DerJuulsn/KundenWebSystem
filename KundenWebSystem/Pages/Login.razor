@page "/Login"
@using KundenWebSystem.Data
@inject SignInService SignInService
@inject NavigationManager NavigationManager

<h3>Anmeldebereich</h3>
<h5>Für Bestandskunden</h5>

<EditForm Model="@model" OnValidSubmit="CheckLoginDetails">

    @if (showError)
    {
        <label class="text-danger">Email und Passwort stimmen nicht überein</label>
    }

    <div class="col my-2">
        <label class="form-label">Email</label>
        <input class="form-control" type="email" @bind-value="model.Email"/>
    </div>
    <div class="col my-2">
        <label class="form-label">Passwort</label>
        <input class="form-control" type="password" @bind-value="model.Password"/>
    </div>
    <button type="submit" class="btn btn-primary my-2" @onclick="CheckLoginDetails" disabled="@tryLogin">Einloggen</button>
</EditForm>

<div class="my-3">
    <p>Noch kein Kundenkonto?</p>
    <a href="/register" class="btn-link">Jetzt registrieren</a>
</div>

@code {

    private readonly LoginModel model = new();

    //Regex emailValidation = new Regex(@"[a-zA-Z0-9]+@[a-zA-Z0-9]+\.[a-z]{2,4}");

    private bool showError;
    private bool tryLogin;

    async Task CheckLoginDetails()
    {
        if(tryLogin)
            return;
        
        tryLogin = true;

        try
        {
    //Check if the password is correct
            if (!await SignInService.TryLogIn(model))
            {
                showError = true;
                StateHasChanged();
                await Task.Delay(TimeSpan.FromSeconds(3));
                showError = false;
                StateHasChanged();
                
                return;
            }

            showError = false;
            NavigationManager.NavigateTo("/dashboard");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
        finally
        {
            tryLogin = false;
        }
    }

}