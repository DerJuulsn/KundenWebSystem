@page "/Dashboard"
@using KundenWebSystem.Database.Model
@using Microsoft.EntityFrameworkCore
@inject KWSContext Context
@inject SignInService SignInService

@if (kunde != null && eventdaten != null)
{
    <div class="container-fluid">
        <h3>Hallo @kunde.kd_Vorname @kunde.kd_Name!</h3>
        <hr />
        <div class="row">
            <div class="col-sm-6">
                <span class="fw-bold">Event finden:</span>
                <div class="card" style="width: 18rem;">
                    <div class="card-body">
                        <h5 class="card-title">Neues Abenteuer starten!</h5>
                        <p class="card-text">
                            Ihr nächstes Event wartet bereits auf Sie! Sehen Sie sich die aktuellen Veranstaltungen an und starten Sie in ein neues Abenteuer.
                        </p>
                        <a href="/EventSeite" class="card-link">Zu den Events...</a>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <span class="fw-bold">Ihr nächstes Event:</span>
                <div class="card" style="width: 18rem;">
                    <div class="card-body">
                        <h5 class="card-title">Datum: @eventdaten.ed_Beginn Uhr</h5>
                        <h6 class="card-subtitle mb-2 text-muted">@eventdaten.et_Event.et_Bezeichnung</h6>
                        <p class="card-text">@eventdaten.et_Event.et_Beschreibung</p>
                        <a href="/Event/@eventdaten.et_EventID" class="card-link">Details ansehen</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    
    public int? LoggedInUser { get; set; }
    
    private tbl_Kunden? kunde;
    private tbl_EventDaten? eventdaten;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(!firstRender)
            return;

        LoggedInUser = await SignInService.GetLoggedInUser();
        
        if(LoggedInUser == null)
        {
            // Redirect to Login
            return;
        }

        kunde = await Context.tbl_Kunden.Where(x => x.kd_KundenID == LoggedInUser).FirstAsync();

        eventdaten = await Context.tbl_Buchungen
            .Include(buchungen => buchungen.ed_EvDaten.et_Event)
            .Where(buchungen => buchungen.kd_KundenID == LoggedInUser && !buchungen.bu_Storniert)
            .Select(buchungen => buchungen.ed_EvDaten)
            .Where(x => x.ed_Beginn > DateTime.Now && x.ed_Freigegeben)
            .OrderBy(daten => daten.ed_Beginn)
            .FirstOrDefaultAsync();
        
        StateHasChanged();
    }

}