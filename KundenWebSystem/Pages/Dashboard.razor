@page "/Dashboard"
@using KundenWebSystem.Database.Model
@using Microsoft.EntityFrameworkCore
@using System;
@using System.Reflection;
@inject KWSContext Context


<div class="container-fluid">
    <h3>Hallo @Kundenname @Kundenachname!</h3>
    <hr />
    <div class="row">
        <div class="col-sm-6">
            <span style="font-weight: bold;">Event finden:</span>
            <div class="card" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">Neues Abenteuer starten!</h5>
                    <p class="card-text">
                        Ihr nächstes Event wartet bereits auf Sie! Sehen Sie sich die aktuellen Veranstaltungen an und starten Sie in ein neues Abenteuer.
                    </p>
                    <a href="EventSeite" class="card-link">Zu den Events...</a>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <span style="font-weight: bold;">Ihr nächstes Event:</span>
            <div class="card" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">Datum: @DatumUhr Uhr</h5>
                    <h6 class="card-subtitle mb-2 text-muted">@Bezeichnung</h6>
                    <p class="card-text">@Beschreibung</p>
                    <a href="bookings/cancel/@EventID" class="card-link">Details ansehen</a>
                </div>
            </div>
        </div>
    </div>
</div>




@code {
    private string Kundenname;
    private string Kundenachname;
    private DateTime DatumUhr;
    private string Bezeichnung;
    private string Beschreibung;
    private int EventID;

    public IList<tbl_EventDaten> EventDatenVM { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var kid = 1;
        var kunde = await Context.tbl_Kunden.Where(x => x.kd_KundenID == kid).FirstAsync();
        Kundenname = kunde.kd_Vorname;
        Kundenachname = kunde.kd_Name;



        var buchungen = await Context.tbl_Buchungen.Where(x => x.kd_KundenID == kid && x.bu_Storniert == false).FirstAsync();
        var eventdaten = await Context.tbl_EventDaten.Where(x => x.ed_EvDatenID == buchungen.ed_EvDatenID && x.ed_Beginn > System.DateTime.Now && x.ed_Freigegeben == true).FirstAsync();
        var events = await Context.tbl_Events.Where(x => x.et_EventID == eventdaten.et_EventID).FirstAsync();

        DatumUhr = eventdaten.ed_Beginn;
        Bezeichnung = events.et_Bezeichnung;
        Beschreibung = events.et_Beschreibung;
        EventID = buchungen.bu_BuchungsID;

    }

}